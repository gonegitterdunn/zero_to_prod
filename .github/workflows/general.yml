name: Rust

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout git repo to runner
        uses: actions/checkout@v2

      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          # if profile is not set, rustup installs rust-docs, clippy and rustfmt by default
          profile: minimal
          toolchain: stable
          # sets this toolchain as an override for the current directory
          override: true

      - name: Run 'cargo test'
        uses: actions-rs/cargo@v1
        with:
          command: test

  fmt:
    name: rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout git repo to runner
        uses: actions/checkout@v2

      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt
          # sets this toolchain as an override for the current directory
          override: true

      - name: Run 'cargo fmt'
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          # formats all packages and local path based dependencies
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout git repo to runner
        uses: actions/checkout@v2

      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: clippy
          # sets this toolchain as an override for the current directory
          override: true

      - name: Run 'cargo clippy'
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          # set lint denied
          args: -- -D warnings

  coverage:
    name: Code coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout git repo to runner
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          # sets this toolchain as an override for the current directory
          override: true

      - name: Run 'cargo tarpaulin'
        uses: actions-rs/tarpaulin@v0.1
        with:
          # ignores test function lines when collecting coverage
          args: '--ignore-tests'