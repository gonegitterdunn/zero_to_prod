[package]
name = "zero_to_prod"
version = "0.1.0"
edition = "2021"

[lib]
path = "src/lib.rs"

[[bin]]
path = "src/main.rs"
name = "zero_to_prod"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
actix-web = "4"
chrono = "0.4.15"
config = "0.11"
secrecy = { version = "0.8", features = ["serde"] }
serde = { version = "1", features = ["derive"] }
tokio = { version = "1", features = ["macros", "rt-multi-thread"] }
tracing = { version = "0.1", features = ["log"] }
tracing-bunyan-formatter = "0.3"
tracing-log = "0.1"
tracing-subscriber = { version = "0.3", features = ["registry", "env-filter"] }
uuid = { version = "0.8.1", features = ["v4"] }
tracing-actix-web = "0.5"
serde-aux = "3"
unicode-segmentation = "1"
validator = "0.14"
reqwest = { version = "0.11", default-features = false, features = [
  "json",
  "rustls-tls",
] }
rand = { version = "0.8", features = ["std_rng"] }
thiserror = "1"

[dependencies.sqlx]
version = "0.5.7"
default-features = false
features = [
  "runtime-actix-rustls", # use actix as runtime for futures and rustls as TLS backend
  "macros",               # gives us sqlx::query! and sqlx::query_as!
  "postgres",             # gives unique postgres functionality
  "uuid",                 # allows mapping sql uuids to the Uuid type from uuid crate
  "chrono",               # support for mapping sql timestamptz to DateTime<T> from chrono crate
  "migrate",              # same functionality as sqlx-cli for managing migrations -> useful for tests
  "offline",
]

[dev-dependencies]
once_cell = "1"
claim = "0.5"
fake = "~2.3"
quickcheck = "0.9.2"
quickcheck_macros = "0.9.1"
tokio = { version = "1", features = ["rt", "macros"] }
wiremock = "0.5"
serde_json = "1"
linkify = "0.8"
